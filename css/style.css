*,
*::before,
*::after{
    box-sizing: border-box;
}

/* Custom properties, update these for your own design */

:root {
    --ff-primary: 'Source Sans Pro', sans-serif;
    --ff-secondary: 'Source Code Pro', monospace;

    --fw-reg: 300;
    --fw-bold: 900;

    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-accent: #16e0bd;

    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;


    --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25), /*box shadow, 0.75em blur */
          0.125em 0.125 0.25em rgba(0,0,0,.15);  /* darker shadow on top to layer things */
}

@media (min-width: 800px){ /* If the width goes above 800px... */
     :root{
        --fs-h1: 4.5rem;
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }
}

/* General Styles */
body{
    background: var(--clr-light); /* set value equal to the custom variable declared earlier */
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    line-height: 1.6;
}

section{
    padding: 5em 2em;
}

img{
    display: block; /* block gets rid of some issues that sometimes come up with images */
    max-width: 100%; /* max-width is 100% because we don't want the images to overflow */
}

strong{
    font-weight: var(--fw-bold);
}

:focus{
    outline: 3px solid var(--clr-accent);
    outline-offset: 3px;+
}

.btn { /* my work */
    display: inline-block; /* if it were a block, it would extend the whole block, if it were inline, it would only surround the words */
    padding: 0.5em 1.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    text-decoration: none; /* gets rid of the default underline */
    cursor: pointer; /* if you put it in a button */
    font-size: .8rem;
    text-transform: uppercase;
    letter-spacing: 2px; /* since the text is uppercase, it helps to put some spacing for visibility */
    font-weight: var(--fw-bold); 
    transition: transform 200ms ease-in-out; /* creates animation of scale(1.1) when hovering over it */
}

.btn:hover {
    transform: scale(1.1);
}

/* Typography */
h1, 
h2,
h3 {
    line-height: 1;
    margin: 0;
}

h1{
    font-size: var(--fs-h1);
}

h2{
    font-size: var(--fs-h2);
}

h3{
    font-size: var(--fs-h3);
}

.section__title{
    margin-bottom: .25em;
}

.section__title--intro{
    font-weight: var(--fw-reg);
}

.section__title--intro strong{ /* This will put Jane Doe into another line */
    display: block;
}

.section__subtitle {
    margin: 0;
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
    background: var(--clr-accent);  
    padding: .25em 1em;
    font-family: var(--ff-secondary);
    margin-bottom: 1em;
}

nav{ /* TEMPORARY: get rid of nav for now */
    display: none; 
}

.intro {
    position: relative;
}

.intro__img {
    box-shadow: var(--bs);
}

@media (min-width: 600px) {
    .intro {
        display: grid;
        width: min-content;
        margin: 0 auto;
        grid-column-gap:1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        grid-template-columns: min-content max-content;
    }
    
    .intro__img {
        grid-area: img;
        min-width: 250px; /* */
        position: relative;
        z-index: 2; /* just to be safe... we want section__subtitle--intro to be behind the image */
    }    
    
    .section__subtitle--intro {
        align-self: start;
        grid-column: -1/1; /* Stretches the whole length && overlapping is not permitted so it goes to another line */
        grid-row: 2;  /* Force it to our grid row 2 */
        text-align: right; /* so we can see the text and it isn't hidden by the image */
        position: relative; /* we could use absolute positioning, but it's best to avoid if you can */
        left: -1.5em; /* pushes to the left to make it look nice, but the width on the right won't match */
        width: calc(100% + 1.5em); /* 100% of the current width PLUS 1.5em so the length is back what it was WHILE INCLUDING the custom left push */
    }
}

/* My Services */
.my-services {
    background-color: var(--clr-dark); /* you could do --clr-accent to get a bleeding green color */
    background-image: url(../img/services-bg.jpg);
    background-size: cover; /* so the background never repeats and COVERS the entire area */
    background-blend-mode: multiply; /* makes it much darker */
    color: var(--clr-light); /* make it light so we can actually see the words */
    text-align: center;
}

.section__title--services{
    color: var(--clr-accent); 
    position: relative;

}

.section__title--services::after{ /* use a pseudoelement to put a line after the heading, pseudoelement creates space for the title */
    content: ''; /* need to give a content or they won't appear */
    display: block;
    width: 3em;
    height: 1px; /* creates a space between the heading and the text underneathe it */
    margin: 0.5em auto 1em;

    background: var(--clr-light);
    opacity: 0.5;
    /* background: currentColor; would make it match the title color */
}

.services{ /* so the button doesn't look too compact */
    margin-bottom: 4em;
}

.service{
    max-width: 500px;
    margin: 0 auto;
}

@media (min-width: 800px){
    .services {
        display: flex;
        max-width: 1000px;
        margin-left: auto; /* auto so it doesnt overwrite the margin bottom of the button*/
        margin-right: auto;

    }

    .service + .service { /* + combinator checks the siblings */
        margin-left: 2em; /* places a margin on the left of every sibling; we could use gap: x% from flexbox*/
    }
}

.about-me{
    max-width: 1000px;
    margin: 0 auto;
}

.about-me__img {
    box-shadow: var(--bs);
}

@media (min-width: 600px) {
    .about-me {
        display: grid;
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        grid-column-gap: 2em;
    }
    
    .section__title--about {
        grid-area: title;
    }
    
    .section__subtitle--about {
        grid-column: 1/-1;
        grid-row: 2; /* start at the second row, first column and EXTEND to the last column */
        position: relative;
        left: -1em;
        width: calc(100% + 2em);
        padding-left: 1em;
        padding-right: calc(200px + 4em); 
        /* 
            sets it up so the text can never go under the image. 
            200px is the width of the img 
        */
    }

    .about-me__img {
        grid-area: img;
        position: relative;
        z-index: 2;
    }
}

 /* My Work */
.section__subtitle--work{
    color: var(--clr-accent);
    font-weight: var(--fw-bold);
    margin-bottom: 2em;
}

.my-work{
    background: var(--clr-dark);
    color: var(--clr-light);
    text-align: center;
}

.portfolio {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    /*repeat(auto-fit, minmax(300px, 1fr)); /*will auto-fit the columns, each grid has a minimum size of 300px, but if it has room to get better, it will (up to 1fr) */
}

.portfolio__item{
    overflow: hidden; /* keeps the box from overflowing outward if img is transformed */
    background: var(--clr-accent);
    margin: 5px;
}

.portfolio__img { /* */
    transition: 
        transform 750ms cubic-bezier(.5,0,.5,1);
        opacity: 250ms linear;
}

.portfolio__item:focus{
    position: relative;
    z-index: 2;
}

.portfolio__img:hover, 
.portfolio__item:focus{
    transform: scale(1.2);
    opacity: .80;
}


/* footer */

.footer {
    background: rgb(1, 1, 1);
    font-size: var(--fs-h3);
    color: var(--clr-accent);
    padding: 2.5em 0;
    text-align: center;
}

.footer a { 
    color: inherit;
    text-decoration: none;
}

.footer__link{

    font-weight: var(--fw-bold);

}

.footer__link:hover, 
.social-list__link:hover {
    opacity: .7;
}

.footer__link:hover {
    text-decoration: underline; /* so that we see the underline only when our mouse is on it */
}

.social-list{
    list-style: none; /* gets rid of the bullets */
    display: flex;
    justify-content: center;
    margin: 2em 0 0; /* space it out a little bit (shorthand is: top, right, bottom, left). We make the bottom margin 0 because we don't want the footer to expand too far down after the icons*/
    padding: 0; /* default padding makes it off-center */
    gap: 2em;
}
